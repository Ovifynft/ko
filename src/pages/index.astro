---
import Layout from '../layouts/Layout.astro';
import Footer from '../layouts/Footer.astro';
import Header from '../layouts/Header.astro';

import { ArrowLeft, ArrowRight } from 'lucide-react';
let data = {active: 'eden', links: ['eden', 'works', 'timeline', 'about-me', 'contact']}
import '../styles/style.css'
import EdenSection from '../layouts/EdenSection.astro';

const timeline = [
	{
		date : "October 2016",
		title : "BSc Medical Physiology",
		heading : "Exploring How the Human Mind and Body Work",
		description : "<span>I focused on research methods and real-world applications, which helped me develop a deeper understanding of how psychology shapes our day-to-day experiences.</span><span> This foundation has been invaluable in my design process, allowing me to create user-centered solutions that resonate with people on both cognitive and emotional levels.</span>",
		year : "2016",
		url : "bg-[url('/images/timeline/1.jpg')]"
	},
	{
		date : "October 2019 - June 2022",
		title : "Product Design Internship at Clutch Labs",
		heading : "Introduction to User Research and Design Basics",
		description : "<span>I got my first experience of user research and design through hands-on projects. I designed a pair of headphones and even pitched a VR concert idea to Chelsea FC.</span><span> One standout experience was using principles of human psychology to boost Waftop Couture’s lip balm sales where I scaled down the product sizes to reduce costs and make them more appealing to buyers.</span><span> These early projects sparked my passion for creating user-centered designs that are both practical and impactful.</span>",
		year : "2019",
		url : "bg-[url('/images/timeline/2.jpg')]"
	},
	{
		date : "March 2020",
		title : "Foundation in Finance & Forex Trading",
		heading : "Gaining Comprehensive Knowledge of Finance",
		description : "<span>I developed a solid understanding of finance, focusing on both fundamental and technical analysis for Forex trading. This experience sharpened my analytical thinking and decision-making skills.</span><span> I also gained practical effective risk and money management strategies, which taught me the importance of discipline and strategic planning—skills that have been invaluable in both trading and design.</span>",
		year : "2020",
		url : "bg-[url('/images/timeline/3.jpg')]"
	},
	{
		date : "October 2022 - December 2022",
		title : "Google & Coursera",
		heading : "Mastering UX Design Principles",
		description : "<span>I earned the Google UX Design Certificate, which deepened my understanding of user-centered design principles. I tackled real-world design challenges and learned how to create clean, user-focused apps. </span><span> This journey also allowed me to practice advanced prototyping techniques, helping me bring design concepts to life with greater precision and attention to detail.</span>",
		year : "2022",
		url : "bg-[url('/images/timeline/4.jpg')]"
	},
	{
        date : "May 2022 - December 2022",
        title : "Programming & Data Analysis at Seneca Polytechnic",
        heading : "Honors Graduate with a Focus on Python<span class='font-source leading-1'>,</span> Data Analysis<span class='font-source leading-1'>,</span> <span class='font-source nd leading-1'>&</span> Software Development",
        description : "<span>Graduating with honors, I specialized in Python, data analysis, and software development. I gained hands-on experience in advanced data manipulation and explored the fundamentals of machine learning.</span><span> Throughout this journey, I collaborated on various design, software, and data analytics projects, which strengthened my problem-solving skills and ability to work effectively in cross-functional teams.</span>",
        year : "2022",
        url : "bg-[url('/images/timeline/5.jpg')]"
    },
    {
        date : "January 2024",
        title : "UX & Data Analysis Instructor",
        heading : "Mastery through Teaching",
        description : "<span>I deepened my expertise by teaching others about data; how to interpret it and seamlessly combine it with design for impactful solutions. </span><span> I guided intern analysts and designers, developed course materials, and led final projects. This experience not only strengthened my knowledge but also improved my leadership and mentoring skills, reinforcing the idea that teaching is one of the most powerful ways to master a subject.</span>",
        year : "2024",
        url : "bg-[url('/images/timeline/6.jpg')]"
    },
	{
		date : "January 2024",
		title : "Built Prospera: A Financial Market Automation Tool",
		heading : "Building Prospera: A Financial Market Automation Tool",
		description : "<span>Built Prospera, a financial market automation tool using Python and SQL. It achieved 99.9% accuracy across various currency pairs, significantly enhancing trading efficiency. </span><span> Prospera streamlined daily trading tasks, automated risk management processes, and provided data-driven insights, making complex trading decisions faster and more reliable.<span><span> This project sharpened my skills in algorithm development, automation, and financial analytics.</span>",
		year : "2024",
		url : "bg-[url('/images/timeline/7.jpg')]"
	},
	{
		date : "Feb 2023 - Present",
		title : "Banking Advisor at the Royal Bank of Canada",
		heading : "Enhancing Banking Efficiency Through User Research",
		description : "<span>I conduct user research with over 15,000 Royal Bank clients, gaining valuable insights into everyday banking and future aspirations.<span><span> Using these insights, I created a design proposal that significantly improved customer onboarding efficiency, enhancing data visualization and decision-making processes.</span><span> This experience deepened my understanding of user behavior in the financial sector and highlighted the power of data-driven solutions in enhancing operational performance.</span>",
		year : "2023",
		url : "bg-[url('/images/timeline/8.jpg')]"
	},
	{
		date : "Launch March 2025",
		title : "Product Design Lead for OpenPolicy",
		heading : "Designing OpenPolicy for the Canadian Government",
		description : "<span>I designed OpenPolicy, an application developed for the Canadian government.</span><span> My role focused on preparing the app for deployment, ensuring it was scalable and adaptable for global legislative bodies, including the UK’s House of Lords, the Indian Parliament, and the German Bundestag.<span><span> This project strengthened my skills in designing for large-scale, diverse user bases while addressing complex policy and governance needs.</span>",
		year : "2025",
		url : "bg-[url('/images/timeline/9.jpg')]"
	}
]

const slides = [
	{
		tags : ['Artificial Intelligence', 'Finance', 'Human'],
		heading : 'Eden',
		title : 'Smart, <span class="text-red-500">Stable</span>, Simple',
		year : '2015',
		description : 'Eden gives you clarity and confidence with your money. It helps you stay on top of your spending, understand your finances, and grow your wealth without the stress or confusion.',
		buttons : `<button class="px-4 py-3 rounded-lg text-white bg-[#222222]">Request Access <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/multi-arrows.svg')]"></div></button><a href="/eden" class="px-4 py-3 rounded-lg border-[1px] border-black flex items-center gap-2">How we built it <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/right-dark.svg')]"></div></a>`,
		url : "bg-[url('/images/slides/eden.png')]",
		alternate : "bg-[url('/images/slides/eden-gif.gif')]",
	},
	{
		tags : ['User Experience', 'Government', 'Mobile App Design'],
		heading : 'Open<span class="text-gray-200">Policy</span><br>App Design<span class="text-gray-200"> (MVP)</span>',
		year : '2024',
		description : '<span>OpenPolicy is a platform designed to connect citizens with their government like never before. It allows users to track bills, vote on policies, and directly engage with representatives, all in one place.</span><span>As the Product Lead, I redesigned the app from the ground up, transforming a cluttered, unusable experience into a seamless and intuitive platform.</span>',
		buttons : `<button class="px-4 py-3 rounded-lg text-white bg-[#222222]">Get it on the Appstore <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/ic_baseline-apple.svg')]"></div></button> <button class="px-4 py-3 rounded-lg border-[1px] border-black">How we built it <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/right-dark.svg')]"></div></button>`,
		url : "bg-[url('/images/slides/open-policy.png')]",
		alternate : "bg-[url('/images/slides/open-policy.png')]",
	},
	{
		tags : ['Product Design', 'Industrial', 'User Experience'],
		heading : 'Crack <span class="text-[#CFB46A]">Headphones</span></h2><p class="mt-4">',
		year : '2015',
		description : '<span>OpenPolicy is a platform designed to connect citizens with their government like never before. It allows users to track bills, vote on policies, and directly engage with representatives, all in one place.</span><span>As the Product Lead, I redesigned the app from the ground up, transforming a cluttered, unusable experience into a seamless and intuitive platform.</span>',
		buttons : `<button class="px-4 py-3 rounded-lg text-white bg-black">Blueprint & Specs <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/solar_music-note-2-bold.svg')]"></div></button>`,
		url : "bg-[url('/images/slides/crack-headphones.png')]",
		alternate : "bg-[url('/images/slides/crack-headphones.png')]",
	},
	{
		tags : ['Sports', 'Interaction Design', 'Creative Website'],
		heading : 'Pencil <span class="text text-[#336633]">Hoops <br> Website Design</span>',
		year : '2023',
		description : '<span>Pencil Hoops is an interactive, people-friendly website designed for NBA fans who appreciate the art of pencil sketching.</span><span>It blends minimal design, accessibility, and engaging experiences, combining stunning pencil sketches with interactive animations and dynamic sound effects to bring NBA moments to life.</span>',
		buttons : `<button class="px-4 py-3 rounded-lg text-white bg-[#222222]">Tour on the Website <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/mdi_basketball.svg')]"></div></button> <button class="px-4 py-3 rounded-lg border-[1px] border-black">Read the Story <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/right-dark.svg')]"></div></button>`,
		url : "bg-[url('/images/slides/basketball.png')]",
		alternate : "bg-[url('/images/slides/hoops-gif.gif')]",
	},
	
	
]
---
<Layout title="Welcome to Astro.">
	<div class="body-cont" x-data={JSON.stringify(data)} x-effect="active = window.location.hash?.slice(1) || 'hero'"  @hash-update.window="active = $event.detail"> 
	<div class="bg-[#F1F1F3] pre-loader-view h-screen w-full fixed top-0 left-0 right-0 z-20 flex flex-col items-center justify-center">
		<div class="absolute bottom-0 right-0 w-[40%] aspect-[2/2] bg-[url('/images/preloader-bg.png')] bg-bottom bg-contain bg-no-repeat opacity-[2%]"></div>
		<div class="w-[10%] min-w-[100px] max-w-[250px] aspect-square bg-gray-500 rounded-full bg-[url('/images/profile-pic.png')] bg-center bg-cover bg-no-repeat border-[8px] border-[#F1F1F3] before:absolute before:content-['']  before:inline-block relative before:-right-[9px] before:-left-[9px] before:rounded-full before:-top-[9px] before:-bottom-[9px] before:bg-white before:z-[-1]"></div>
		<p class="mt-6 mb-10">There are no rules in arts, only dogma.</p>
		<div class="w-[50%] max-w-[674px] bg-white relative h-[8px] rounded-full overflow-clip">
			<div class="bg-black absolute page-loader left-0 top-0 bottom-0 rounded-full"></div>
		</div>
		<p class="font-bilal text-[16px] absolute bottom-5 left-5">Kamil Oseni</p>
	</div>

	
	<!-- nav -->
	<Header active="Home"/>

	<!-- arrows -->
	<a :href="'#' + (links[links.indexOf(active) + 1] || links[links.length])" @click="setTimeout(()=> {active = (links[links.indexOf(active) + 1] || links[links.length])}, 1) " class="h-[50px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] fixed left-5 bottom-2 z-[1] down-arrow"></a>
	<a :href="'#' + (links[links.indexOf(active) - 1] || links[0])" @click="setTimeout(()=> {active = (links[links.indexOf(active) - 1] || links[0])}, 1) " class="h-[100px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] fixed left-0 bottom-5 z-[1] up-arrow hidden"></a>

	<main>
		<!-- eden hero -->
		<EdenSection />

		<!-- works -->
		<section id="works" class="h-screen overflow-hidden grid grid-rows-[1fr_1fr] tall short">
			<!-- top-side -->
			<div class="pt-4 px-6 lg:px-20 pb-8 flex items-center">
				{
					slides.map(slide =>
					<div class="justify-between flex-col md:flex-row items-center top-side w-full opacity-0 hidden gap-4">
					<!-- project title, tags and date -->
							<div class="w-full md:w-[40%]">
								<ul class="list-inside text-xs tags">
									{
										slide.tags.map(tag => 
											<li>[ {tag} ]</li>
										)
									}
								</ul>
								<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] mt-4 heading-1" set:html={slide.heading}></h2>
								{slide.title && <p class="mt-4" set:html={slide.title}></p>}
								<p class="mt-4">{slide.year}</p>
							</div>
			
							<!-- project description and actions -->
							<div class="w-full md:w-[60%] text-xs max-w-[600px]">
								<p class="flex flex-col gap-2 md:gap-4 lg:gap-5" set:html={slide.description}></p>
								<div class="pt-4 flex gap-3 flex-wrap" set:html={slide.buttons}></div>
							</div>
						</div>
					)
				}
			</div>
			
			<!-- bottom side - project slider -->
			<div class="flex gap-2 p-2 items-end justify-end">
				{
					slides.map(slide => 
						<div data-url={slide.url} data-alternate={slide.alternate} class:list={["h-full bg-gray-200 rounded-md max-h-[400px] w-[20%] bottom-slide hover:cursor-pointer bg-cover bg-no-repeat bg-center", slide.url]}></div>
					)
				}
				
			</div>

			<div class="flex items-center justify-center gap-2 py-4">
				<ArrowLeft className="p-2 rounded-full bg-gray-100 slide-left-btn" size={28}/>
				<ul class="flex gap-2">
					<li class="w-[10vw] max-w-[100px] h-1 rounded-full bg-gray-300 bottom-slide-indicator hover:cursor-pointer"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-full bg-gray-300 bottom-slide-indicator hover:cursor-pointer"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-full bg-gray-300 bottom-slide-indicator hover:cursor-pointer"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-full bg-gray-300 bottom-slide-indicator hover:cursor-pointer"></li>
				</ul>
				<ArrowRight className="p-2 rounded-full bg-gray-100 slide-right-btn" size={28}/>
			</div>
		</section>

		<!-- timeline -->
		<section id="timeline" class="h-screen grid grid-rows-[minmax(auto,100%)_auto] px-4 md:px-20 gap-6 pt-5 overflow-hidden">
			<!-- center box -->
			<div class="pt-8 overflow-auto">
			{
				timeline.map(timeline =>
					<div class="pb-8 justify-between items-center gap-4 hidden opacity-0 timeline-slide">
						{/* project title, tags and date */}
						<div class="flex flex-col gap-4 pb-10 md:pb-0">
							<p class="">{timeline.date}</p>
							<p class="font-bold">{timeline.title}</p>
							<div class:list={["aspect-video bg-gray-200 rounded-lg bg-cover bg-no-repeat lg:hidden", timeline.url]}></div>
							<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] heading-1" set:html={timeline.heading}></h2>
							<p class="max-w-[677px] flex flex-col gap-2" set:html={timeline.description}></p>
						</div>

						{/* project description and actions */}
						<div class:list={["w-[45%] aspect-video hidden lg:block bg-gray-200 rounded-lg bg-cover bg-no-repeat", timeline.url]}></div>
					</div>
				)
			}
			</div>
			

			<!-- progress -->
			<div>
				<div class="h-1 flex gap-3">  
					{
						timeline.map(timeline =>
							<div class="w-full h-full bg-gray-200 relative timeline-indicator hover:cursor-pointer">
								<div class="absolute w-0 h-full bg-black left-0 top-0 timeline-indicator-progress"></div>
								<div class="absolute right-0 left-0 bottom-[100%] lg:h-20 h-12 flex flex-col items-center translate-y-[100%] timeline-year">
									<span class="py-1 lg:px-6 lg:text-sm sm:text-xs text-[10px] px-3 bg-gray-200 rounded-full inline-block timeline-year-pill opacity-0">{timeline.year}</span>
									<div data-svg-wrapper>
										<svg class="lg:h-12 h-6 lg:w-[12px]" viewBox="0 0 12 46" fill="none" xmlns="http://www.w3.org/2000/svg">
										<path d="M6 11.3333C8.94552 11.3333 11.3333 8.94552 11.3333 6C11.3333 3.05448 8.94552 0.666668 6 0.666668C3.05448 0.666668 0.666667 3.05448 0.666667 6C0.666667 8.94552 3.05448 11.3333 6 11.3333ZM7 46V44H5V46H7ZM7 40L7 36H5V40H7ZM7 32V28H5V32H7ZM7 24L7 20H5L5 24H7ZM7 16L7 12H5L5 16H7ZM7 8L7 6H5L5 8H7Z" fill="#222222"/>
										</svg>
									</div>
								</div>
							</div>
						)
					}		
				</div>
				<!-- arrows -->
				<dir class="flex gap-4 pt-5 pb-6 relative bg-white">
					<ArrowLeft className="p-2 rounded-full bg-gray-100 timeline-left-btn" size={28}/>
					<ArrowRight className="p-2 rounded-full bg-gray-100 timeline-right-btn" size={28}/>
					<!-- <div class="h-[100px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] absolute right-0"></div> -->
				</dir>
			</div>
		</section>

		<!-- about me -->
		<section id="about-me" class="min-h-screen px-4 md:px-20">
			<div class="pt-8 grid grid-rows-[auto_auto] md:grid-cols-[auto_minmax(0,30%)] gap-10">
				<!--  contents -->
				<div class="flex flex-col gap-3.5">
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] heading-1">Art and Photography</h2>
						<p class="max-w-[744px] mt-2 flex flex-col gap-2"> 
							<span>I like to balance logic with instinct,  a mix of planning and going with the flow. I tend 
							to notice trends before they take off, whether it’s in data, markets, or design.</span>
							<span>When I’m not working on numbers or building something like Prospera, I’m probably outside staying active. I enjoy playing chess, 
							rollerblading, trying out extreme sports, or just exploring and taking pictures along the way</span>
						</p>
					</div>
		
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] heading-1">Anime and Animals</h2>
						<p class="max-w-[744px] mt-2 flex flex-col gap-2"> 
							<span>I love to unwind with movies and anime, and right now, I’m really into Solo Leveling. 
							Anime helps me relax, spark my imagination, and enjoy stories from different perspectives.</span>
							<span>I also have a soft spot for animals, and at the end of the day, it’s all about enjoying life, finding moments to relax, 
							and having a good time.</span>
						</p>
					</div>
		
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] heading-1">Faith</h2>
						<p class="max-w-[744px] mt-2"> 
							Above all, my faith in Jesus defines who I am. The Gospel reminds me that life isn’t just about achievements or adventures, 
							but about loving God and loving people. Whether I’m working, exploring, or relaxing, 
							I strive to live in a way that reflects His grace and truth, finding purpose and meaning beyond the everyday.
						</p>
					</div>
				</div>

				<!-- images -->
				<div class="w-full h-[400px] md:h-full grid grid-cols-3 grid-rows-[2fr_1fr_2fr] gap-1 p-1">
					<div class="bg-[url('/images/images1.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images2.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					<div class="bg-[url('/images/images3.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images5.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images6.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					<div class="bg-[url('/images/images4.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					
				</div>
			</div>
		</section>
	</main>
	<Footer />
	</div>
</Layout>

<style>

</style>

<script src="../scripts/HeaderProgressIndicator.ts"></script>
<script src="../scripts/events.ts"></script>
<script>
		import {lenis, gsap, ScrollTrigger} from '../scripts/setup.ts'
	
		document.addEventListener("click", function (e) {
			const currentScroll = window.scrollY;
	
			let Etarget = e.target as HTMLElement
			const anchor = Etarget.closest("a[href^='#']");
			if (!anchor) return;
	
			e.preventDefault();
			const targetId = anchor.getAttribute("href");
			const target = document.querySelector(targetId) as HTMLElement;
	
			if (target) {
				let targetPos = target.offsetTop;
	 
				if(targetPos < currentScroll) //scroll up
					lenis.scrollTo(target, {duration: 0});
				else // scroll down
					lenis.scrollTo(target, {duration: 2.5, 
					easing : (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2
				});
	
				history.pushState(null, "", targetId);
			}
		});
		
	
	
		gsap.fromTo(".hero-img",{
			translateX : '-50%'
		}, {
			translateX : '0%',
			opacity : 1,
			duration : 2,
			scrollTrigger: {
				trigger: '.hero-img',  // Each element triggers individually
				// start: "top 80%",  // Animation starts when the element is 80% in view
				end: "bottom 92%",
				toggleActions: "play reverse play reset",  // Only plays once
				// markers : true,
			},
		})
	
		gsap.fromTo(".closing-img",{
			translateY : '20%',
			opacity : 0
		}, {
			translateY : '0%',
			opacity : 1,
			duration : 2,
			scrollTrigger: {
				trigger: '.closing-img',  // Each element triggers individually
				// start: "top 80%",  // Animation starts when the element is 80% in view
				end: "bottom 50%",
				toggleActions: "play reverse play reset",  // Only plays once
				// markers : true,
			},
		})


		let bottomSlideIndicators = Array.from(document.querySelectorAll('.bottom-slide-indicator'))
		let topSides = Array.from(document.querySelectorAll('.top-side'))
		let bottomSlides = Array.from(document.querySelectorAll('.bottom-slide'))
		let bottomSlidesAlternate = Array.from(document.querySelectorAll('.bottom-slide-alternate'))
		let currentSlide = 0
		let righSlideBtn = document.querySelector('.slide-right-btn')
		let leftSlideBtn = document.querySelector('.slide-left-btn')

		// checking if timelines will fix that glitching shit
		var tl = gsap.timeline();
		activeSlideByIndex(currentSlide)


		function activeSlideByIndex(i){
			
			tl.kill();
			tl = gsap.timeline();
			// first we wana collapse everybody thats not element
			gsap.to(bottomSlides.filter((el) => el != bottomSlides[i]), {
				width: "20%",
				duration: 1,
				ease: "power2.out",
				onStart: function () {
					this.targets().forEach(el => {
					const imageUrl = el.dataset.url;
					const img = imageUrl.match(/'([^']+)'/);
					el.style.backgroundImage = `url('${img[1]}')`;
				});
				}
			});

			// then we wana expand this guy
			gsap.fromTo(bottomSlides[i], {opacity : 0}, {
				width: "40%",
				opacity : 1,
				duration: 1,
				ease: "power2.out",
				onStart: function () {
					this.targets().forEach(el => {
					const imageUrl = el.dataset.alternate;
					const img = imageUrl.match(/'([^']+)'/);
					el.style.backgroundImage = `url('${img[1]}')`;
					});
				}
			});

			// darken this indicator 
			gsap.to(bottomSlideIndicators[i], {
				backgroundColor: 'black',
				duration: 1,
				ease: "power2.out",
			});

			// and lighten the rest
			gsap.to(bottomSlideIndicators.filter((el, j) => j != i), {
				backgroundColor: '#e5e7eb',
				duration: 1,
				ease: "power2.out",
			});

			// and fade out the rest
			tl.to(topSides.filter((el, j) => j != i), {
				opacity: 0,
				display: "none",
				duration: 0.5,
				ease: "power2.out",
			});

			// change top side from hidden to visible and fade in
			tl.to(topSides[i], {
				opacity: 1,
				display: "flex",
				duration: 1,
				ease: "power2.out",
			});
			currentSlide = i
		}

		bottomSlides.forEach((element, i) => {
			element.addEventListener('click', (e) => {
				e.stopPropagation()
				activeSlideByIndex(i)
			});
		});

		bottomSlideIndicators.forEach((element, i) => {
			element.addEventListener('click', (e) => {
				e.stopPropagation()
				activeSlideByIndex(i)
			});
		});

		righSlideBtn?.addEventListener('click', (e)=>{
			e.stopPropagation()
			currentSlide = currentSlide == bottomSlideIndicators.length - 1 ? 0 : currentSlide + 1
			activeSlideByIndex(currentSlide)
		})

		leftSlideBtn?.addEventListener('click', (e)=>{
			e.stopPropagation()
			currentSlide = currentSlide == 0 ? bottomSlideIndicators.length - 1 : currentSlide - 1
			activeSlideByIndex(currentSlide)
		})

		var timelineTl = gsap.timeline();
		var timelineProgressTl = gsap.timeline();
		// var timeLineYrTl = 
		let timelineSlides = Array.from(document.querySelectorAll('.timeline-slide'))
		let timelineYears = Array.from(document.querySelectorAll('.timeline-year'))
		let timelineYearPills = Array.from(document.querySelectorAll('.timeline-year-pill'))
		let timelineProgress = Array.from(document.querySelectorAll('.timeline-indicator-progress'))
		let currentTimelineIndex = 0
		setActiveTimelineByIndex(currentTimelineIndex)
		timelineProgressTl.pause()

		function setActiveTimelineByIndex(i){
			currentTimelineIndex = i
			timelineTl.kill();
			timelineTl = gsap.timeline();
			timelineProgressTl.kill();
			timelineProgressTl = gsap.timeline();


			timelineTl.to(timelineSlides, {
				duration : 0.2,
				display : 'none',
				opacity : 0,
				ease: "power2.out",
			})

			timelineTl.to(timelineSlides[i], {
				duration : 0.5,
				display : 'flex',
				opacity : 1,
				ease: "power2.out",
			})

			gsap.to(timelineYears, {
				duration : 0.5,
				translateY : '120%',
				ease: "ease.out",
			})

			gsap.to(timelineYears[i], {
				duration : 0.5,
				translateY : "0",
				ease: "ease.out",
			})

			gsap.to(timelineYearPills, {
				duration : 0.5,
				opacity : '0',
				ease: "ease.out",
			})

			gsap.to(timelineYearPills[i], {
				duration : 0.5,
				delay : 0.4,
				opacity : "1",
				ease: "ease.out",
			})

			// full all indicatore before, empty all indicators after
			timelineProgressTl.to(timelineProgress.filter((prog, j) => j < i), {
				duration : 0.1,
				width : "100%",
				ease: "ease.out",
			})

			timelineProgressTl.to(timelineProgress.filter((prog, j) => j > i), {
				duration : 0.1,
				width : "0%",
				ease: "ease.out",
			})

			timelineProgressTl.fromTo(timelineProgress[i], {width : "0%"}, {
				duration : 20,
				width : "100%",
				ease: "ease.out",
				onComplete : () => nxtTimeline()
			})
		}

		function nxtTimeline(){
			currentTimelineIndex = currentTimelineIndex == timelineSlides.length - 1 ? 0 : currentTimelineIndex + 1
			setActiveTimelineByIndex(currentTimelineIndex)
		}

		function prevTimeline(){
			currentTimelineIndex = currentTimelineIndex == 0 ? timelineSlides.length - 1 : currentTimelineIndex - 1
			setActiveTimelineByIndex(currentTimelineIndex)
		}

		document.querySelector('.timeline-left-btn')?.addEventListener('click', (e)=>{
			e.stopPropagation()
			prevTimeline()
		})

		document.querySelector('.timeline-right-btn')?.addEventListener('click', (e)=>{
			e.stopPropagation()
			nxtTimeline()
		})

		document.querySelectorAll('.timeline-indicator').forEach((el, i)=>{
			el.addEventListener('click', (e) => {
				e.stopPropagation()
				setActiveTimelineByIndex(i)
			})
		})

		// scroll trigger
		// move bottom nav when footer shows
		ScrollTrigger.create({
			trigger: '#timeline',
			// start: 'top top',
			// endTrigger: '#otherID',
			end: 'bottom 50%+=100px',
			onEnter : () => {
				// console.log('we just enter timeline')
				timelineProgressTl.resume()
			},
			onLeave : () => {
				timelineProgressTl.pause()
			},
			onEnterBack : () => {
				timelineProgressTl.resume()
			},
			onLeaveBack : () => {
				timelineProgressTl.pause()
			}
		});
		
	   const loadtl = gsap.timeline();

		loadtl.from(".page-loader", { width : '0%', duration: 1 })     // You want to skip this
		.addLabel("afterBox")
		.to('.page-loader', { width : '20%', duration: 100 })
		.addLabel("dom-loaded")
		.to('.page-loader', { width : '50%', duration: 100 })
		.addLabel("loaded")
		.to('.page-loader', { width : '100%', duration: 10,
			onComplete : () => {
				gsap.to('.pre-loader-view',{
					opacity : 0,
					duration : 2,
					onComplete : () => {
						document.querySelector('.pre-loader-view')?.remove()
					}
				})
			}
		 })

	   	document.addEventListener('DOMContentLoaded', () => {
			loadtl.seek('dom-loaded')
		});

		window.addEventListener('load', () => {
			loadtl.seek('loaded')
		});
	
</script>
	
