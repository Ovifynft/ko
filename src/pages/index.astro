---
import Layout from '../layouts/Layout.astro';
import Footer from '../layouts/Footer.astro'

import { ArrowLeft, ArrowRight } from 'lucide-react';
let data = {active: 'hero', links: ['works', 'timeline', 'about-me', 'contact']}
import '../styles/style.css'
---
<Layout title="Welcome to Astro.">
	<div class="body-cont" x-data={JSON.stringify(data)} x-effect="active = window.location.hash?.slice(1) || 'hero'"  @hash-update.window="active = $event.detail"> 
	<!-- nav -->
	<header class="fixed top-0 left-0 right-0 bg-white top-nav">
		<nav class="flex justify-between items-center pt-4 pb-2 px-20 border-b-[1px] border-b-gray-100">
			<div class="flex items-center gap-4">
				<div class="w-[78px] aspect-square bg-gray-500 rounded-full bg-[url('/images/profile-pic.png')] bg-center bg-cover bg-no-repeat"></div>
				<p class="font-bilal text-[16px]">Kamil Oseni</p>
			</div>

			<ul class="flex items-center gap-16 nav-text font-semibold">
				<li><a href="#works">Works</a></li>
				<li @click="active = 'timeline'" :class="{'text-black' : ['timeline', 'quick-overview-2'].includes(active)}"><a href="#timeline">Journey</a></li>
				<li><a href="#about-me">About</a></li>
				<!-- <li><a href="#contact">Get In Touch</a></li> -->
			</ul>

			<div class="flex items-center gap-8">
				<div class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-in.svg')]"></div>
				<div class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-mail.svg')]"></div>
			</div>
		</nav>
	</header>

	<!-- arrows -->
	<a :href="'#' + (links[links.indexOf(active) + 1] || links[links.length])" @click="setTimeout(()=> {active = (links[links.indexOf(active) + 1] || links[links.length])}, 1) " class="h-[50px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] fixed left-5 bottom-2 z-[1] down-arrow"></a>
	<a :href="'#' + (links[links.indexOf(active) - 1] || links[0])" @click="setTimeout(()=> {active = (links[links.indexOf(active) - 1] || links[0])}, 1) " class="h-[100px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] fixed left-0 bottom-5 z-[1] up-arrow hidden"></a>

	<main>
		<!-- works -->
		<section id="works" class="h-screen overflow-hidden grid grid-rows-[minmax(auto,1fr)_1fr] tall short">
			<!-- top-side -->
			<div class="pt-4 px-20 pb-8 flex justify-between items-center pt-auto top-side">
				<!-- project title, tags and date -->
				<div>
					<ul class="list-disc list-inside text-xs flex gap-4">
						<li>[ Sports ]</li>
						<li>[ Interaction Design ]</li>
						<li>[ Creative Website ]</li>
					</ul>
					<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] mt-4 heading-1">Pencil <span class="text text-[#336633]">Hoops <br> Website Design</span></h2>
					<p class="mt-4">2023</p>
				</div>

				<!-- project description and actions -->
				<div class="w-[40%] text-xs">
					<p class="">
						Pencil Hoops is an interactive, people-friendly website designed for 
						NBA fans who appreciate the art of pencil sketching.<br><br>
						It blends minimal design, accessibility, and engaging experiences, 
						combining stunning pencil sketches with interactive 
						animations and dynamic sound effects to bring NBA moments to life.
					</p>

					<div class="pt-4 flex gap-2">
						<button class="px-4 py-3 rounded-lg text-white bg-[#222222]">Tour on the Website <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/mdi_basketball.svg')]"></div></button>
						<button class="px-4 py-3 rounded-lg border-[1px] border-black">Read the Story</button>
					</div>
				</div>
			</div>

			<div class="pt-4 px-20 pb-8 justify-between items-center pt-auto top-side absolute opacity-0">
				<!-- project title, tags and date -->
				<div>
					<ul class="list-disc list-inside text-xs flex gap-4">
						<li>[ Sports ]</li>
						<li>[ Interaction Design ]</li>
						<li>[ Creative Website ]</li>
					</ul>
					<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] mt-4 heading-1">OpenPolicy App Design (MVP)</h2>
					<p class="mt-4">2023</p>
				</div>

				<!-- project description and actions -->
				<div class="w-[40%] text-xs">
					<p class="">
						Pencil Hoops is an interactive, people-friendly website designed for 
						NBA fans who appreciate the art of pencil sketching.<br><br>
						It blends minimal design, accessibility, and engaging experiences, 
						combining stunning pencil sketches with interactive 
						animations and dynamic sound effects to bring NBA moments to life.
					</p>

					<div class="pt-4 flex gap-2">
						<button class="px-4 py-3 rounded-lg text-white bg-[#222222]">Tour on the Website <div class="icon bg-no-repeat bg-center bg-cover bg-[url('/icons/mdi_basketball.svg')]"></div></button>
						<button class="px-4 py-3 rounded-lg border-[1px] border-black">Read the Story</button>
					</div>
				</div>
			</div>
			<!-- bottom side - project slider -->
			<div class="flex gap-2 p-2 items-end justify-end">
				<div class="h-full bg-gray-200 max-h-[400px] rounded-md w-[40%] bottom-slide"></div>
				<div class="h-full bg-gray-200 max-h-[400px] rounded-md w-[20%] bottom-slide"></div>
				<div class="h-full bg-gray-200 max-h-[400px] rounded-md w-[20%] bottom-slide"></div>
				<div class="h-full bg-gray-200 max-h-[400px] rounded-md w-[20%] bottom-slide"></div>
			</div>

			<div class="flex items-center justify-center gap-2 py-4">
				<ArrowLeft className="p-2 rounded-full bg-gray-100" size={28}/>
				<ul class="flex gap-2">
					<li class="w-[10vw] max-w-[100px] h-1 rounded-lg bg-gray-300 opacity-100 bottom-slide-indicator"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-lg bg-gray-300 opacity-30 bottom-slide-indicator"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-lg bg-gray-300 opacity-30 bottom-slide-indicator"></li>
					<li class="w-[10vw] max-w-[100px] h-1 rounded-lg bg-gray-300 opacity-30 bottom-slide-indicator"></li>
				</ul>
				<ArrowRight className="p-2 rounded-full bg-gray-100" size={28}/>
			</div>
		</section>

		<!-- timeline -->
		<section id="timeline" class="h-screen grid grid-rows-[80%_minmax(auto)]  px-20 gap-6 tall:bg-green-200 short:bg-red-200">
			<!-- center box -->"
			<div class="pt-[200px] pb-8 flex justify-between items-center gap-8">
				<!-- project title, tags and date -->
				<div>
					<p class="mt-4">October 2016</p>
					<p class="mt-4 font-bold">BSc Medical Physiology</p>
					<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px] mt-10">Exploring How the Human Mind <br>and Body Work</h2>
					<p class="max-w-[677px] mt-6"> 
						I focused on research methods and real-world applications, 
						which helped me develop a deeper understanding of how psychology shapes our day-to-day experiences. <br><br>
						This foundation has been invaluable in my design process, allowing me to create user-centered solutions 
						that resonate with people on both cognitive and emotional levels.
					</p>
				</div>

				<!-- project description and actions -->
				<div class="w-[45%] aspect-video bg-gray-200 rounded-lg"></div>
			</div>

			<!-- progress -->
			<div>
				<div class="h-1 flex gap-3">  
					<div class="w-full h-full bg-gray-200 relative after:content-[''] after:absolute after:w-[50%] after:bottom-0 after:bg-black after:left-0 after:top-0">
						<div class="absolute right-0 left-0 bottom-[100%] lg:h-20 h-12 flex flex-col items-center">
							<p class="py-1 lg:px-6 lg:text-sm text-xs px-3 bg-gray-200 rounded-full inline-block">2016</p>
							<div data-svg-wrapper>
								<svg class="lg:h-12 h-6 lg:w-[12px]" viewBox="0 0 12 46" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M6 11.3333C8.94552 11.3333 11.3333 8.94552 11.3333 6C11.3333 3.05448 8.94552 0.666668 6 0.666668C3.05448 0.666668 0.666667 3.05448 0.666667 6C0.666667 8.94552 3.05448 11.3333 6 11.3333ZM7 46V44H5V46H7ZM7 40L7 36H5V40H7ZM7 32V28H5V32H7ZM7 24L7 20H5L5 24H7ZM7 16L7 12H5L5 16H7ZM7 8L7 6H5L5 8H7Z" fill="#222222"/>
								</svg>
							</div>
						</div>
					</div>
					<div class="w-full h-full bg-gray-200 relative"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
					<div class="w-full h-full bg-gray-200"></div>
		
				
				</div>
				<!-- arrows -->
				<dir class="flex gap-4 mt-5 relative">
					<button class="p-2 hover:cursor-pointer"><ArrowLeft /></button>
					<button class="p-2 hover:cursor-pointer"><ArrowRight /></button>
					<div class="h-[100px] aspect-[2/4] bg-center bg-contain bg-no-repeat bg-[url('/icons/down_arrow.svg')] absolute right-0"></div>
				</dir>
			</div>
		</section>

		<!-- about me -->
		<section id="about-me" class="h-screen px-20">
			<div class="pt-[180px] grid grid-cols-[auto_minmax(0,40%)] gap-10">
				<!--  contents -->
				<div class="flex flex-col gap-3.5">
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px]">Art and Photography</h2>
						<p class="max-w-[744px] mt-2"> 
							I like to balance logic with instinct,  a mix of planning and going with the flow. I tend 
							to notice trends before they take off, whether it’s in data, markets, or design. <br><br>
							When I’m not working on numbers or building something like Prospera, I’m probably outside staying active. I enjoy playing chess, 
							rollerblading, trying out extreme sports, or just exploring and taking pictures along the way
						</p>
					</div>
		
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px]">Anime and Animals</h2>
						<p class="max-w-[744px] mt-2"> 
							I love to unwind with movies and anime, and right now, I’m really into Solo Leveling. 
							Anime helps me relax, spark my imagination, and enjoy stories from different perspectives. <br><br>
							I also have a soft spot for animals, and at the end of the day, it’s all about enjoying life, finding moments to relax, 
							and having a good time.
						</p>
					</div>
		
					<div>
						<h2 class="font-safira lg:text-2xl leading-[40px] lg:leading-[58.25px]">Faith</h2>
						<p class="max-w-[744px] mt-2"> 
							Above all, my faith in Jesus defines who I am. The Gospel reminds me that life isn’t just about achievements or adventures, 
							but about loving God and loving people. Whether I’m working, exploring, or relaxing, 
							I strive to live in a way that reflects His grace and truth, finding purpose and meaning beyond the everyday.
						</p>
					</div>
				</div>

				<!-- images -->
				<div class="w-full h-full grid grid-cols-3 grid-rows-[2fr_1fr_2fr] gap-1 p-1">
					<div class="bg-[url('/images/images1.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images2.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					<div class="bg-[url('/images/images3.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images5.jpg')] rounded-lg bg-cover bg-center bg-no-repeat row-span-2"></div>
					<div class="bg-[url('/images/images6.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					<div class="bg-[url('/images/images4.jpg')] rounded-lg bg-cover bg-center bg-no-repeat"></div>
					
				</div>
			</div>
		</section>
	</main>
	<Footer />
	</div>
</Layout>

<style>

</style>

<script>
		import Alpine from 'alpinejs';
		import gsap from "gsap";
		import Lenis from "lenis";
		import { ScrollTrigger, ScrollToPlugin } from "gsap/all";
		gsap.registerPlugin(ScrollTrigger, ScrollToPlugin)
	
		gsap.config({
			nullTargetWarn: false,
		})
	
		// initialise lenis
		const lenis = new Lenis({
			autoRaf: true,
		});
	
		let previousScroll = 0;
	
		document.addEventListener("click", function (e) {
			const currentScroll = window.scrollY;
	
			let Etarget = e.target as HTMLElement
			const anchor = Etarget.closest("a[href^='#']");
			if (!anchor) return;
	
			e.preventDefault();
			const targetId = anchor.getAttribute("href");
			const target = document.querySelector(targetId) as HTMLElement;
	
			if (target) {
				let targetPos = target.offsetTop;
	 
				if(targetPos < currentScroll) //scroll up
					lenis.scrollTo(target, {duration: 0});
				else // scroll down
					lenis.scrollTo(target, {duration: 2.5, 
					easing : (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2
				});
	
				history.pushState(null, "", targetId);
			}
		});
	
		const downArrow = document.querySelector('a.down-arrow') as HTMLAnchorElement;
		const upArrow = document.querySelector('a.up-arrow') as HTMLAnchorElement;
	
	
		// document.addEventListener('alpine:init', () => {
		//     Alpine.data('active', () => ({
		//         open: false,
	 
		//         toggle() {
		//             this.open = ! this.open
		//         }
		//     }))
		// })
		function scrollUp(){
			lenis.scrollTo(downArrow.getAttribute('href'), {duration: 2.5, 
				easing : (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2
			});
			window.dispatchEvent(new CustomEvent('hash-update', { detail: downArrow.getAttribute('href').slice(1) }));
		}
	
		function scrollDown(){
			lenis.scrollTo(upArrow.getAttribute('href'), {duration: 0});
			window.dispatchEvent(new CustomEvent('hash-update', { detail: upArrow.getAttribute('href').slice(1) }));
		}
	
		document.addEventListener('keydown', function(event) {
			if (event.key === 'ArrowDown') {
				scrollUp()
			}
		});
	
		document.addEventListener('keydown', function(event) {
			if (event.key === 'ArrowUp') {
				scrollDown()
			}
		});
	
		let intervalId = null;
		window.addEventListener('wheel', (e) => {
			e.preventDefault(); // stop actual scrolling
			const direction = e.deltaY > 0 ? 'down' : 'up';
			lenis.stop()
	
			// clearTimeout
			console.log('here')
			clearTimeout(intervalId)
			intervalId = setTimeout(() => {
				lenis.start()
				if(direction == 'up') scrollUp()
				else scrollDown()
	
				console.log('inside', lenis)
			}, 50);
	
	
			// if(direction == 'up') scrollUp()
			// else scrollDown()
		}, { passive: false });
	
		
	
	
		gsap.fromTo(".hero-img",{
			translateX : '-50%'
		}, {
			translateX : '0%',
			opacity : 1,
			duration : 2,
			scrollTrigger: {
				trigger: '.hero-img',  // Each element triggers individually
				// start: "top 80%",  // Animation starts when the element is 80% in view
				end: "bottom 92%",
				toggleActions: "play reverse play reset",  // Only plays once
				// markers : true,
			},
		})
	
		gsap.fromTo(".closing-img",{
			translateY : '20%',
			opacity : 0
		}, {
			translateY : '0%',
			opacity : 1,
			duration : 2,
			scrollTrigger: {
				trigger: '.closing-img',  // Each element triggers individually
				// start: "top 80%",  // Animation starts when the element is 80% in view
				end: "bottom 50%",
				toggleActions: "play reverse play reset",  // Only plays once
				// markers : true,
			},
		})
	
		
	
		document.querySelectorAll('section').forEach((section) => {
			gsap.fromTo(section.querySelectorAll('.heading-up'),{translateY : '50%', opacity : 0}, {
				translateY: 0,
				opacity: 1,
				duration: 1,
				ease: "power2.out",
				stagger: 0.4,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 96%",
					toggleActions: "play reverse play reset", // Only plays once
					// markers : true,
				},
			});
	
			gsap.fromTo(section.querySelectorAll('.heading-up-footer'),{translateY : '50%', opacity : 0}, {
				translateY: 0,
				opacity: 1,
				duration: 1,
				ease: "power2.out",
				stagger: 0.4,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 50%",
					toggleActions: "play reverse play reset", // Only plays once
					// markers : true,
				},
			});
	
			gsap.fromTo(section.querySelectorAll('.quick-right'),{translateX : '50%', opacity : 0}, {
				translateX: 0,
				opacity: 1,
				duration: 0.8,
				ease: "power2.out",
				stagger: 0.2,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 95%",
					toggleActions: "play reverse play reset",  // Only plays once
					// markers : true,
				},
			});
	
			gsap.fromTo(section.querySelectorAll('.quick-up'), {opacity : 0, translateY : '50%'}, {
				translateY: 0,
				opacity: 1,
				duration: 0.8,
				ease: "power2.out",
				stagger: 0.2,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 95%",
					// scrub : true,
					toggleActions: "play reverse play reset",  // Only plays once
					// markers : true,
				},
			});
	
			gsap.fromTo(section.querySelectorAll('.quick-down'), {opacity : 0, translateY : '-50%'}, {
				translateY: 0,
				opacity: 1,
				duration: 0.8,
				ease: "power2.out",
				stagger: 0.2,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 95%",
					// scrub : true,
					toggleActions: "play reverse play reset",  // Only plays once
					// markers : true,
				},
			});
	
			gsap.fromTo(section.querySelectorAll('.quick-appear'), {opacity : 0}, {
				opacity: 1,
				duration: 0.8,
				ease: "power2.out",
				stagger: 0.2,
				scrollTrigger: {
					trigger: section,  // Each element triggers individually
					start: "top 20%",  // Animation starts when the element is 80% in view
					end: "bottom 99%",
					// scrub : true,
					toggleActions: "play reverse play reset",  // Only plays once
					// markers : true,
				},
			});
	
		})
	
	
	
		document.querySelectorAll('.box-parent').forEach((boxParent) => {
			gsap.fromTo(boxParent.querySelectorAll('.box'),{
				xPercent : 0
			}, { 
				xPercent : 100,
				duration : 0.6,
				ease : "power1.out",
				stagger : 0.08,
				scrollTrigger: {
					trigger: boxParent,  // Each element triggers individually
					start: "top 50%",  // Animation starts when the element is 80% in view
					end: "bottom 92%",
					// scrub : true,
					toggleActions: "play reverse play reset",  // Only plays once
					// markers : true,
				},
			});
		})
	
	
		// for the footer
		let footer = document.querySelector('#contact') as HTMLElement
		let footerAnim = gsap.fromTo('.bottom-nav', { bottom : 0}, {
			bottom : footer.clientHeight,
			duration: 2,
			paused : true,
			ease: "circ.inOut",
			// scrollTrigger: {
			//     // trigger: '#contact',  // Each element triggers individually
			//     // start: "top 20%",  // Animation starts when the element is 80% in view
			//     // end: "bottom 95%",
			//     // scrub : true,
			//     // toggleActions: "play reverse play reverse",  // Only plays once
			//     // markers : true,
			// },
		});
	
		let dissappearBottomNav = gsap.fromTo('.bottom-nav', { opacity : 1}, {
			opacity : 0,
			duration: 2,
			paused : true,
			ease: "circ.inOut",
			// scrollTrigger: {
			//     // trigger: '#contact',  // Each element triggers individually
			//     // start: "top 20%",  // Animation starts when the element is 80% in view
			//     // end: "bottom 95%",
			//     // scrub : true,
			//     // toggleActions: "play reverse play reverse",  // Only plays once
			//     // markers : true,
			// },
		});
	
		// move bottom nav when footer shows
		ScrollTrigger.create({
			trigger: '#contact',
			// start: 'top top',
			// endTrigger: '#otherID',
			end: 'bottom 50%+=100px',
			onToggle: (self) => console.log('toggled, isActive:', self.isActive),
			onUpdate: (self) => {
	
				if(self.direction == 1){
					footerAnim.duration(2)
					footerAnim.play();
				}else{
					footerAnim.duration(0)
					footerAnim.reverse()
				}
			}
		});
	
		// dissappear footer on certain pages
		['#quick-overview', '#research-and-insights', '#design-process', '#collaboration', '#next-steps', '#closing', '#key-features', '#market-strategy', '#conclusion'].forEach(section => {
			ScrollTrigger.create({
				trigger: section,
				// start: 'top top',
				// endTrigger: '#otherID',
				// end: 'bottom 50%+=100px',
				onToggle: (self) => {
					if(self.isActive) dissappearBottomNav.play()
					else dissappearBottomNav.reverse()
				},
				onUpdate: (self) => {
					console.log('here2')
					// if(self.direction == 1){
					//     footerAnim.duration(2)
					//     footerAnim.play();
					// }else{
					//     footerAnim.duration(0)
					//     footerAnim.reverse()
					// }
				}
			});
		})

		// hide the top nav
		// gsap.to('.top-nav', {
		// 	translateY: "-100%",
		// 	opacity: 1,
		// 	duration: 1,
		// 	ease: "power2.out",
		// });
	   
		let hideNavTimeout: ReturnType<typeof setTimeout>;

			

				
		

		window.addEventListener('mousemove', (event) => {
			// Check if the mouse is within the top 100px of the window
			// console.log(event.clientY)
			if (event.clientY <=100) {
				// Show the navigation bar
				gsap.to('.top-nav', {
					translateY: "0%",
					duration: 1,
					ease: "power2.out",
				});

				// Clear the previous timeout to reset the timer
				// clearTimeout(hideNavTimeout);
			}else{
				gsap.to('.top-nav', {
					translateY: "-100%",
					duration: 1,
					ease: "power2.out",
				});
			}
		});

		let bottomSlideIndicators = Array.from(document.querySelectorAll('.bottom-slide-indicator'))
		let topSides = Array.from(document.querySelectorAll('.top-side'))

		document.querySelectorAll('.bottom-slide').forEach((element, i) => {
			element.addEventListener('click', () => {
				// first we wana collapse the rest thats not this guy

				Array.from(document.querySelectorAll('.bottom-slide')).filter((el) => el != element).forEach((el, i) => {
					gsap.to(el, {
						width: "20%",
						duration: 1,
						ease: "power2.out",
					});

				})

				// then we wana expand this guy
				gsap.to(element, {
					width: "40%",
					duration: 1,
					ease: "power2.out",
				});

				// darken this indicator 
				gsap.to(bottomSlideIndicators[i], {
					opacity: 1,
					duration: 1,
					ease: "power2.out",
				});

				// and lighten the rest
				bottomSlideIndicators.filter((el, j) => j != i).forEach((el, j) => {
					gsap.to(el, {
						opacity: 0.3,
						duration: 1,
						ease: "power2.out",
					});
				})

				// change top side from hidden to visible and fade in
				gsap.to(topSides[i], {
					opacity: 1,
					display: "flex",
					duration: 1,
					ease: "power2.out",
				});
				// and fade out the rest
				topSides.filter((el, j) => j != i).forEach((el, j) => {
					gsap.to(el, {
						opacity: 0,
						display: "none",
						duration: 1,
						ease: "power2.out",
					});
				})
			});
		});
	
	   
	
	
	
		// gsap.to(window, { duration: 1, scrollTo: "#hey-there", ease: "bounce.out" });
	
</script>
	
