---
const hasTimelineSlot = Astro.slots.timeline !== undefined;
import { Menu, X } from "lucide-react";
const {active} = Astro.props;
---


<header class="fixed top-0 left-0 right-0 bg-white top-nav z-10">
    <nav class:list={["flex justify-between gap-8 items-center pt-4 pb-2 px-4 md:px-10 xl:px-20 border-b-[1px] border-b-gray-100", hasTimelineSlot && "pt-8 pb-4"]}>
        {
            !hasTimelineSlot &&
            <div class="flex items-center gap-4">
                <div class="xl:w-[78px] w-[40px] aspect-square bg-gray-500 rounded-full bg-[url('/images/profile-pic.png')] bg-center bg-cover bg-no-repeat"></div>
                <p class="font-bilal text-[16px]">Kamil Oseni</p>
            </div>
        }

        <ul class="lg:flex items-center gap-4 xl:gap-8 2xl:gap-16 nav-text font-semibold font-sans hidden">
            <li><a href="#works">Works</a></li>
            <li @click="active = 'timeline'" :class="{'text-black' : ['timeline', 'quick-overview-2'].includes(active)}"><a href="#timeline">Journey</a></li>
            <li><a href="#about-me">About</a></li>
            <!-- <li><a href="#contact">Get In Touch</a></li> -->
        </ul>
        <Menu className="min-w-8 lg:hidden relative open-nav hover:cursor-pointer"/>

        <slot  name="timeline"/>
        <!-- <slot /> -->

        <!-- brand -->
        <div class="flex items-center  gap-4 md:hidden">
            <!-- <div class="xl:w-[78px] w-[40px] aspect-square bg-gray-500 rounded-full bg-[url('/images/profile-pic.png')] bg-center bg-cover bg-no-repeat"></div> -->
            <p class="font-bilal text-[16px]">KOâœ¨</p>
        </div>
        <!-- socials -->
        <div class="hidden sm:flex items-center gap-8">
            <a href="https://www.linkedin.com/in/kamiloseni/" target="_blank" class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-in.svg')]"></a>
            <a href="mailto:Kamilzoseni@gmail.com"  class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-mail.svg')]"></a>
        </div>
    </nav>
</header>
 <!-- mob-nav -->
 <nav class="mob-nav z-[20] fixed top-0 left-0 bottom-0 right-0 -translate-y-[100%] lg:hidden bg-white text-[#AFAFAF] font-safira px-19 py-10 flex flex-col justify-between items-center text-center">
    <X className="min-w-8 close-nav hover:cursor-pointer text-black"/>
    <ul class="flex flex-col min-h-[60%] justify-between">
        <li class="nav-item opacity-0 leading-[40px] hover:bg-black transition-all duration-300"><a href="#">Home</a></li>
        <li class="nav-item opacity-0 leading-[40px] hover:bg-black transition-all duration-300"><a href="#">Pencil Hoops</a></li>
        <li class:list={["nav-item opacity-0 leading-[40px] hover:bg-black transition-all duration-300", active == 'Eden' && "text-black" ]}><a href="#">Eden</a></li>
        <li class="nav-item opacity-0 leading-[40px] hover:bg-black transition-all duration-300"><a href="#">OpenPolicy</a></li>
        <li class="nav-item opacity-0 leading-[40px] hover:bg-black transition-all duration-300"><a href="#">Crack Headphones</a></li>
    </ul>
    <div class="flex items-center gap-8">
        <a href="https://www.linkedin.com/in/kamiloseni/" target="_blank" class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-in.svg')]"></a>
        <a href="mailto:Kamilzoseni@gmail.com"  class="icon bg-no-repeat bg-center bg-contain bg-[url('/icons/dark-mail.svg')]"></a>
    </div>
</nav>

<script>
	import {gsap, lenis} from "../scripts/setup.ts"
    let shouldOpenMainNav = false;
    let wasOpenedByMouseMove = false

    function openMainNav(){
        gsap.to('.top-nav', {
            translateY: "0%",
            duration: 1,
            ease: "power2.out",
        });
    }

    function closeMainNav(){
        gsap.to('.top-nav', {
            translateY: "-100%",
            duration: 1,
            ease: "power2.out",
        });
    }

    window.addEventListener('click', (event) => {
        if (event.clientY <=100) {
           openMainNav()
           shouldOpenMainNav = false
        }else{
            if(shouldOpenMainNav){
                shouldOpenMainNav = false
                openMainNav()
            }else{
                shouldOpenMainNav = true
                closeMainNav()
            }
        }
	});

    window.addEventListener('mousemove', (event) => {
        if (event.clientY <=100) {
           openMainNav()
           shouldOpenMainNav = false
           wasOpenedByMouseMove = true
        }else{
            if(wasOpenedByMouseMove){
                wasOpenedByMouseMove = false
                shouldOpenMainNav = true
                closeMainNav()
            }
        }
	});


    let offset = 50;
    lenis.on('scroll', (e) => {
        if(e.direction == 1){
            if(offset < 100) offset+=1;
            if (offset == 100){
                shouldOpenMainNav = true
                closeMainNav()
            }
            console.log(offset)
        }else{
            if(offset > 0) offset-=1;
            if (offset == 0){
                shouldOpenMainNav = false
                openMainNav()
            }
        }
    });

    document.querySelector('.close-nav').addEventListener('click', () => {
        // Hide the navigation bar
        gsap.to('.mob-nav', {
            translateY: "-100%",
            duration: 1,
            ease: (x) =>  x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,
        });
    });

    document.querySelector('.open-nav').addEventListener('click', () => {
        // Hide the navigation bar
        console.log('here')
        gsap.fromTo('.mob-nav', { y : "-100%"}, {
            y: "0%",
            duration: 1,
            ease: (x) =>  x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,
        });
        gsap.fromTo('.nav-item', {opacity : 0}, {
            delay: 0.6,
            opacity: 1,
            stagger: 0.6,
            duration: 1,
            // ease: (x) =>  x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,
        });
    });


</script>